[project]
name = "FontCollector"
description = "FontCollector for Advanced SubStation Alpha file."
authors = [
    { name = "moi15moi", email = "moi15moismokerlolilol@gmail.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "ass",
    "ass-tag-analyzer",
    "fontTools>=4.38.0",
    "freetype-py",
    "FindSystemFontsFilename>=0.1.2",
    "langcodes",
]
classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Intended Audience :: End Users/Desktop",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "License :: OSI Approved :: MIT License",
        "Typing :: Typed",
]
dynamic = ["version"]

[project.scripts]
fontcollector = "font_collector.__main__:main"

[project.urls]
Source = "https://github.com/moi15moi/FontCollector/"
Tracker = "https://github.com/moi15moi/FontCollector/issues/"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = { attr = "font_collector._version.__version__" }

[tool.setuptools.packages.find]
include = ["font_collector*"]

[tool.mypy]
warn_unused_configs = true
warn_unused_ignores = false
strict = true
files = [
    # TODO Add the tests folder
    "font_collector"
]

[[tool.mypy.overrides]]
module = "ass.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ass_tag_analyzer.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "find_system_fonts_filename.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fontTools.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "freetype.*"
ignore_missing_imports = true

[tool.coverage.report]
include = [
    "font_collector/*",
    ]
exclude_also = [
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]
